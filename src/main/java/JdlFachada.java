
import ObjetosNegocio.MovimientoGranel;
import ObjetosNegocio.Producto;
import ObjetosServicio.Fecha;
import control.Control;
import java.util.List;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */

/**
 *
 * @author Kamilala
 */
public class JdlFachada extends javax.swing.JDialog {
    private final Control control = new Control();
    /**
     * Creates new form FachadaI
     */
    public JdlFachada(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        productosMenu = new javax.swing.JMenu();
        agregarPrMenu = new javax.swing.JMenuItem();
        actualizarPrMenu = new javax.swing.JMenuItem();
        eliminarPrMenu = new javax.swing.JMenuItem();
        MovimientosMenu = new javax.swing.JMenu();
        compraMenu = new javax.swing.JMenuItem();
        ventaMenu = new javax.swing.JMenuItem();
        inventarioMenu = new javax.swing.JMenu();
        eliminarInventario = new javax.swing.JMenuItem();
        actualizarInventario = new javax.swing.JMenuItem();
        consultasMenu = new javax.swing.JMenu();
        productoConsulta = new javax.swing.JMenu();
        porClaveConsulta = new javax.swing.JMenuItem();
        porTipoUnidad = new javax.swing.JMenuItem();
        inventarioConsulta = new javax.swing.JMenu();
        todoProductos = new javax.swing.JMenuItem();
        registroVentasMenu = new javax.swing.JMenuItem();
        registroComprasMenu = new javax.swing.JMenuItem();
        ventasPeriodoMenu = new javax.swing.JMenuItem();
        comprasPeriodoMenu = new javax.swing.JMenuItem();
        Salir = new javax.swing.JMenuItem();

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        jMenuItem1.setText("jMenuItem1");

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("jRadioButtonMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Inventario Fachada");

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Bienvenidos!!");

        jLabel3.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Fachada de Abarrotes");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel2)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(123, Short.MAX_VALUE))
        );

        productosMenu.setText("Productos");

        agregarPrMenu.setText("Agregar");
        agregarPrMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarPrMenuActionPerformed(evt);
            }
        });
        productosMenu.add(agregarPrMenu);

        actualizarPrMenu.setText("Actualizar");
        actualizarPrMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarPrMenuActionPerformed(evt);
            }
        });
        productosMenu.add(actualizarPrMenu);

        eliminarPrMenu.setText("Eliminar");
        eliminarPrMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarPrMenuActionPerformed(evt);
            }
        });
        productosMenu.add(eliminarPrMenu);

        jMenuBar1.add(productosMenu);

        MovimientosMenu.setText("Movimientos");

        compraMenu.setText("Compra");
        compraMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compraMenuActionPerformed(evt);
            }
        });
        MovimientosMenu.add(compraMenu);

        ventaMenu.setText("Venta");
        ventaMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ventaMenuActionPerformed(evt);
            }
        });
        MovimientosMenu.add(ventaMenu);

        inventarioMenu.setText("Inventario");

        eliminarInventario.setText("Eliminar");
        eliminarInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarInventarioActionPerformed(evt);
            }
        });
        inventarioMenu.add(eliminarInventario);

        actualizarInventario.setText("Actualizar");
        actualizarInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarInventarioActionPerformed(evt);
            }
        });
        inventarioMenu.add(actualizarInventario);

        MovimientosMenu.add(inventarioMenu);

        jMenuBar1.add(MovimientosMenu);

        consultasMenu.setText("Consultas");

        productoConsulta.setText("Producto");

        porClaveConsulta.setText("Por Clave");
        porClaveConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porClaveConsultaActionPerformed(evt);
            }
        });
        productoConsulta.add(porClaveConsulta);

        porTipoUnidad.setText("Por Tipo Unidad");
        porTipoUnidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porTipoUnidadActionPerformed(evt);
            }
        });
        productoConsulta.add(porTipoUnidad);

        consultasMenu.add(productoConsulta);

        inventarioConsulta.setText("Inventario");

        todoProductos.setText("Todos los productos");
        todoProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todoProductosActionPerformed(evt);
            }
        });
        inventarioConsulta.add(todoProductos);

        registroVentasMenu.setText("Registro de ventas");
        registroVentasMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registroVentasMenuActionPerformed(evt);
            }
        });
        inventarioConsulta.add(registroVentasMenu);

        registroComprasMenu.setText("Registro de compras");
        registroComprasMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registroComprasMenuActionPerformed(evt);
            }
        });
        inventarioConsulta.add(registroComprasMenu);

        ventasPeriodoMenu.setText("Ventas dentro de un periodo dado");
        ventasPeriodoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ventasPeriodoMenuActionPerformed(evt);
            }
        });
        inventarioConsulta.add(ventasPeriodoMenu);

        comprasPeriodoMenu.setText("Compras dentro de un periodo dado");
        comprasPeriodoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comprasPeriodoMenuActionPerformed(evt);
            }
        });
        inventarioConsulta.add(comprasPeriodoMenu);

        consultasMenu.add(inventarioConsulta);

        Salir.setText("SALIR");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        consultasMenu.add(Salir);

        jMenuBar1.add(consultasMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ventaMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ventaMenuActionPerformed
        this.setVisible(false);
        JdlRegistrarVenta RegistrarventaMenu = new JdlRegistrarVenta(this, true, control);
        RegistrarventaMenu.setLocationRelativeTo(this);
        RegistrarventaMenu.setVisible(true);
    }//GEN-LAST:event_ventaMenuActionPerformed

    private void compraMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compraMenuActionPerformed
        this.setVisible(false);
        JdlRegistrarCompra dialog = new JdlRegistrarCompra(this, true, control);
        dialog.setVisible(true);

    }//GEN-LAST:event_compraMenuActionPerformed

    private void agregarPrMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarPrMenuActionPerformed
        this.setVisible(false);
        JdlAgregarProducto agregarMenu = new JdlAgregarProducto(this, true, control);
        agregarMenu.setLocationRelativeTo(this);
        agregarMenu.setVisible(true);
    }//GEN-LAST:event_agregarPrMenuActionPerformed

    private void actualizarPrMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarPrMenuActionPerformed
        this.setVisible(false);
        JdlActualizarProducto actualizarMenu = new JdlActualizarProducto(this, true, control);
        actualizarMenu.setLocationRelativeTo(this);
        actualizarMenu.setVisible(true);
    }//GEN-LAST:event_actualizarPrMenuActionPerformed

    private void eliminarPrMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarPrMenuActionPerformed
        this.setVisible(false);
        JdlEliminarProducto eliminarMenu = new JdlEliminarProducto(this, true, control);
        eliminarMenu.setLocationRelativeTo(this);
        eliminarMenu.setVisible(true); 
    }//GEN-LAST:event_eliminarPrMenuActionPerformed

    private void eliminarInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarInventarioActionPerformed
        this.setVisible(false);
        JdlInventarioEliminar eliminarIMenu = new JdlInventarioEliminar(this, true);
        eliminarIMenu.setLocationRelativeTo(this);
        eliminarIMenu.setVisible(true); 
    }//GEN-LAST:event_eliminarInventarioActionPerformed

    private void actualizarInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarInventarioActionPerformed
        this.setVisible(false);
        JdlActualizarInventario ActualizarIMenu = new JdlActualizarInventario(this, true);
        ActualizarIMenu.setLocationRelativeTo(this);
        ActualizarIMenu.setVisible(true); 
    }//GEN-LAST:event_actualizarInventarioActionPerformed

    private void porClaveConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porClaveConsultaActionPerformed
        this.setVisible(false);
        JdlPorClave PorClaveMenu = new JdlPorClave(this, true, control);
        PorClaveMenu.setLocationRelativeTo(this);
        PorClaveMenu.setVisible(true); 
    }//GEN-LAST:event_porClaveConsultaActionPerformed

    private void porTipoUnidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porTipoUnidadActionPerformed
        this.setVisible(false);
        JdlPorTipoUnidad PorTipoUnidadMenu = new JdlPorTipoUnidad(this, true, control);
        PorTipoUnidadMenu.setLocationRelativeTo(this);
        PorTipoUnidadMenu.setVisible(true); 
    }//GEN-LAST:event_porTipoUnidadActionPerformed

    private void ventasPeriodoMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ventasPeriodoMenuActionPerformed
        this.setVisible(false);
        JdlVentasPorPeriodo RegistrarCompraMenu = new JdlVentasPorPeriodo(this, true);
        RegistrarCompraMenu.setLocationRelativeTo(this);
        RegistrarCompraMenu.setVisible(true);
    }//GEN-LAST:event_ventasPeriodoMenuActionPerformed

    private void comprasPeriodoMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comprasPeriodoMenuActionPerformed
        this.setVisible(false);
        JdlComprasPorPeriodo ComprasPorPeriodoMenu = new JdlComprasPorPeriodo(this, true);
        ComprasPorPeriodoMenu.setLocationRelativeTo(this);
        ComprasPorPeriodoMenu.setVisible(true);
    }//GEN-LAST:event_comprasPeriodoMenuActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
    }//GEN-LAST:event_salirActionPerformed

    private void todoProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todoProductosActionPerformed

        try {
        List<Producto> productos = control.obtenerTodosLosProductos();

        if (productos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay productos en el catálogo.");
        } else {
            StringBuilder mensaje = new StringBuilder();
            for (Producto p : productos) {
                mensaje.append("Clave: ").append(p.getClave())
                       .append(", Nombre: ").append(p.getNombre())
                       .append(", Tipo: ").append(p.getTipo())
                       .append(", Unidad: ").append(p.getUnidad())
                       .append("\n");
            }

            JOptionPane.showMessageDialog(this, mensaje.toString(), "Productos", JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

    }//GEN-LAST:event_todoProductosActionPerformed

    private void registroVentasMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registroVentasMenuActionPerformed
   
    Fecha inicio = new Fecha(1, 1, 2000);  // Desde el año 2000
    Fecha fin = new Fecha(31, 12, 2100);   // Hasta el año 2100

    List<MovimientoGranel> ventas = control.mostrarVentas(inicio, fin);

    if (ventas.isEmpty()) {
        javax.swing.JOptionPane.showMessageDialog(this, "No hay movimientos de venta registrados.");
        return;
    }

    StringBuilder mensaje = new StringBuilder("Movimientos de venta registrados:\n");
    for (MovimientoGranel mov : ventas) {
        mensaje.append("Clave: ").append(mov.getProductoGranel().getClave()).append("\n")
               .append("Cantidad: ").append(mov.getCantidad()).append("\n")
               .append("Fecha: ").append(mov.getFecha()).append("\n")
               .append("Procesado: ").append(mov.isProcesado() ? "Sí" : "No").append("\n")
               .append("---------------------------\n");
    }

    javax.swing.JOptionPane.showMessageDialog(this, mensaje.toString());
    }//GEN-LAST:event_registroVentasMenuActionPerformed

    private void registroComprasMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registroComprasMenuActionPerformed
        try {
        // Crear un rango amplio de fechas
        Fecha inicio = new Fecha(1, 1, 2000); // Ejemplos desde el año 2000
        Fecha fin = new Fecha(31, 12, 2100);  // hasta el año 2100

        List<MovimientoGranel> compras = control.mostrarCompras(inicio, fin);

        if (compras == null || compras.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "No hay compras registradas.", "Historial de compras", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        // Armar el mensaje
        StringBuilder mensaje = new StringBuilder("Compras registradas:\n\n");
        for (MovimientoGranel mov : compras) {
            mensaje.append("Clave: ").append(mov.getProductoGranel().getClave())
                   .append(" | Cantidad: ").append(mov.getCantidad())
                   .append(" | Fecha: ").append(mov.getFecha().toString())
                   .append("\n");
        }

        // Mostrar el mensaje
        javax.swing.JOptionPane.showMessageDialog(this, mensaje.toString(), "Historial de Compras", javax.swing.JOptionPane.INFORMATION_MESSAGE);

    } catch (Exception ex) {
        javax.swing.JOptionPane.showMessageDialog(this, "Error al obtener el historial: " + ex.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_registroComprasMenuActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
       System.exit(0);
    }//GEN-LAST:event_SalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JdlFachada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JdlFachada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JdlFachada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JdlFachada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JdlFachada dialog = new JdlFachada(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MovimientosMenu;
    private javax.swing.JMenuItem Salir;
    private javax.swing.JMenuItem actualizarInventario;
    private javax.swing.JMenuItem actualizarPrMenu;
    private javax.swing.JMenuItem agregarPrMenu;
    private javax.swing.JMenuItem compraMenu;
    private javax.swing.JMenuItem comprasPeriodoMenu;
    private javax.swing.JMenu consultasMenu;
    private javax.swing.JMenuItem eliminarInventario;
    private javax.swing.JMenuItem eliminarPrMenu;
    private javax.swing.JMenu inventarioConsulta;
    private javax.swing.JMenu inventarioMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JMenuItem porClaveConsulta;
    private javax.swing.JMenuItem porTipoUnidad;
    private javax.swing.JMenu productoConsulta;
    private javax.swing.JMenu productosMenu;
    private javax.swing.JMenuItem registroComprasMenu;
    private javax.swing.JMenuItem registroVentasMenu;
    private javax.swing.JMenuItem todoProductos;
    private javax.swing.JMenuItem ventaMenu;
    private javax.swing.JMenuItem ventasPeriodoMenu;
    // End of variables declaration//GEN-END:variables
}
